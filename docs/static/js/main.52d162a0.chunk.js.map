{"version":3,"sources":["services/api.js","images/logo.png","components/CharacterCard.js","components/CharacterList.js","services/local-storage.js","components/FilterName.js","components/Filter.js","components/CharacterDetails.js","images/pagNot.gif","components/PageNotFound.js","images/CharacterNot.gif","components/CharacterNotFound.js","components/App.js","index.js"],"names":["getApiData","fetch","then","response","json","data","results","map","character","id","image","name","species","origin","episode","espisode","status","CharacterCard","props","className","to","src","alt","CharacterList","characterElements","key","defaultData","localStorage","getItem","JSON","parse","value","setItem","stringify","FilterName","type","onChange","ev","handleFilter","target","Filter","CharacterDetails","PageNotFound","gif","CharacterNotFound","App","characterLocalStorageData","ls","useState","setCharacter","filterName","setFilterName","useEffect","length","characterData","filteredCharacters","filter","eachCharacter","toLowerCase","includes","logo","exact","path","component","match","params","foundCharacter","find","item","parseInt","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.52d162a0.chunk.js","sourcesContent":["const getApiData = () => {\r\n  return fetch(\"https://rickandmortyapi.com/api/character\")\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      const cleanData = data.results.map((character) => {\r\n        return {\r\n          id: character.id,\r\n          image: character.image,\r\n          name: character.name,\r\n          species: character.species,\r\n          origin: character.origin.name,\r\n          episode: character.espisode,\r\n          status: character.status,\r\n        };\r\n      });\r\n\r\n      return cleanData;\r\n    });\r\n};\r\nexport default getApiData;\r\n","export default __webpack_public_path__ + \"static/media/logo.de13d484.png\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CharacterCard = (props) => {\r\n  return (\r\n    <article className=\"card\">\r\n      <Link to={`/character/${props.character.id}`}>\r\n        <img\r\n          className=\"card-image\"\r\n          src={props.character.image}\r\n          alt={`Foto de ${props.character.name}`}\r\n        />\r\n        <h3 className=\"card-title\"> {props.character.name}</h3>\r\n\r\n        <p className=\"card-text\">{props.character.species}</p>\r\n      </Link>\r\n    </article>\r\n  );\r\n};\r\nexport default CharacterCard;\r\n","import React from \"react\";\r\nimport CharacterCard from \"./CharacterCard\";\r\n\r\nconst CharacterList = (props) => {\r\n  const characterElements = props.character.map((character) => {\r\n    return <CharacterCard key={character.id} character={character} />;\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <ul className=\"cards\">{characterElements}</ul>\r\n    </div>\r\n  );\r\n};\r\nexport default CharacterList;\r\n","const get = (key, defaultData) => {\r\n  const data = localStorage.getItem(key);\r\n  if (data === null) {\r\n    return defaultData;\r\n  } else {\r\n    return JSON.parse(data);\r\n  }\r\n};\r\nconst set = (key, value) => {\r\n  localStorage.setItem(key, JSON.stringify(value));\r\n};\r\nexport default {\r\n  get: get,\r\n  set: set,\r\n};\r\n","import React from \"react\";\r\n\r\nconst FilterName = (props) => {\r\n  const handleChange = (ev) => {\r\n    props.handleFilter({\r\n      value: ev.target.value,\r\n      key: \"name\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <input\r\n      className=\"form\"\r\n      type=\"text\"\r\n      onChange={handleChange}\r\n      value={props.name}\r\n    />\r\n  );\r\n};\r\nexport default FilterName;\r\n","import React from \"react\";\r\nimport FilterName from \"./FilterName\";\r\n\r\nconst Filter = (props) => {\r\n  return (\r\n    <form>\r\n      <FilterName handleFilter={props.handleFilter} name={props.name} />\r\n    </form>\r\n  );\r\n};\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CharacterDetails = (props) => {\r\n  return (\r\n    <>\r\n      <div className=\"details\">\r\n        <Link className=\"card-details-link\" to=\"/\">\r\n          {\" \"}\r\n          Volver\r\n        </Link>\r\n        <div className=\"card-details\">\r\n          <img\r\n            className=\"card-details--image\"\r\n            src={props.character.image}\r\n            alt={`Foto de ${props.character.name}`}\r\n          />\r\n\r\n          <section className=\"card-details--text\">\r\n            <h3 className=\"card-details--text-title\">\r\n              {\" \"}\r\n              {props.character.name}\r\n            </h3>\r\n\r\n            <ul className=\"card-details--text-text\">\r\n              <li>Status:{props.character.status}</li>\r\n              <li>Species: {props.character.species}</li>\r\n              <li>Origin: {props.character.origin}</li>\r\n              <li>Episodes:{props.character.episode /*.length*/}</li>\r\n            </ul>\r\n          </section>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CharacterDetails;\r\n","export default __webpack_public_path__ + \"static/media/pagNot.5e259699.gif\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport gif from \"../images/pagNot.gif\";\r\n\r\nfunction PageNotFound() {\r\n  return (\r\n    <div className=\"pagNot\">\r\n      <h1 className=\"pagNot-title\">PÃ¡gina no encontrada </h1>\r\n      <p className=\"pagNot-text\">\r\n        Vuelve a inicio haciendo click\r\n        <Link className=\"pagNot-link\" to=\"/\">\r\n          AQUI\r\n        </Link>\r\n      </p>\r\n      <img className=\"pagNot-gif\" src={gif} alt=\"Gif RickandMorty\"></img>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PageNotFound;\r\n","export default __webpack_public_path__ + \"static/media/CharacterNot.a950499d.gif\";","import React from \"react\";\r\nimport gif from \"../images/CharacterNot.gif\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CharacterNotFound = (props) => {\r\n  return (\r\n    <div className=\"characterNot\">\r\n      <h2 className=\"characterNot-title\">Personaje no encontrado </h2>\r\n\r\n      <Link className=\"characterNot-link\" to=\"/\">\r\n        Prueba otra vez\r\n      </Link>\r\n\r\n      <img className=\"characterNot-gif\" src={gif} alt=\"Gif RickandMorty\"></img>\r\n    </div>\r\n  );\r\n};\r\nexport default CharacterNotFound;\r\n","import React, { useState, useEffect } from \"react\";\nimport getApiData from \"../services/api\";\nimport logo from \"../images/logo.png\";\nimport CharacterList from \"./CharacterList\";\nimport ls from \"../services/local-storage\";\nimport Filter from \"./Filter\";\nimport CharacterDetails from \"./CharacterDetails\";\nimport PageNotFound from \"./PageNotFound\";\nimport CharacterNotFound from \"./CharacterNotFound\";\nimport { Route, Switch } from \"react-router-dom\";\nimport \"../stylesheet/App.scss\";\n\nconst App = () => {\n  const characterLocalStorageData = ls.get(\"character\", []);\n  const [character, setCharacter] = useState(characterLocalStorageData);\n  const [filterName, setFilterName] = useState(ls.get(\"FilterName\", \"\"));\n\n  useEffect(() => {\n    if (character.length === 0) {\n      getApiData().then((characterData) => {\n        setCharacter(characterData);\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    ls.set(\"character\", character);\n  }, [character]);\n\n  const handleFilter = (data) => {\n    if (data.key === \"name\") {\n      setFilterName(data.value);\n    }\n  };\n\n  const renderCharacterDetails = (props) => {\n    //buscar el personaje\n    const id = props.match.params.id;\n    const foundCharacter = character.find((item) => item.id === parseInt(id));\n\n    return <CharacterDetails character={foundCharacter} />;\n  };\n\n  /* Seccion de filtrado */\n\n  const filteredCharacters = character.filter((eachCharacter) =>\n    eachCharacter.name.toLowerCase().includes(filterName)\n  );\n\n  return (\n    <>\n      <div className=\"container\">\n        <h1>\n          <img className=\"title\" src={logo} alt=\"Ricky and Morty\" />\n        </h1>\n        <Switch>\n          <Route exact path=\"/\">\n            <Filter handleFilter={handleFilter} name={filterName} />\n            {filteredCharacters.length > 0 ? (\n              <CharacterList character={filteredCharacters} />\n            ) : (\n              <CharacterNotFound />\n            )}\n          </Route>\n\n          <Route\n            exact\n            path=\"/character/:id\"\n            component={renderCharacterDetails}\n          ></Route>\n\n          <Route component={PageNotFound} />\n        </Switch>\n        {/* <CharacterDetails /> */}\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./stylesheet/index.css\";\nimport App from \"./components/App\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}